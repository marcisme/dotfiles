source ~/.vim/vam-init.vim

let vam_addons = [
  \ 'github:altercation/vim-colors-solarized',
  \ 'ctrlp',
  \ 'tComment',
  \ 'fugitive',
  \ 'surround',
  \ 'rails',
  \ 'rake',
  \ 'github:tpope/vim-bundler',
  \ 'unimpaired',
  \ 'repeat',
  \ 'vimux',
  \ 'snipmate',
  \ ]

call SetupVAM(vam_addons)

" we now return to your regularly scheduled .vimrc
let mapleader = ','
set nocompatible

" backup files
set backupdir=~/.vim/tmp
set directory=~/.vim/tmp

" solarized setup
syntax enable
let g:solarized_termcolors=256
set background=light
colorscheme solarized

" display customization
set number
set ruler
set laststatus=2
set encoding=utf-8
set cursorline
" statusline originally from janus
set statusline=%f\ %m\ %r
set statusline+=Line:%l/%L[%p%%]
set statusline+=Col:%v
set statusline+=Buf:#%n
set statusline+=[%b][0x%B]
set statusline+=%{fugitive#statusline()}

" tabbing ish
set shiftwidth=2
set tabstop=2
set expandtab
set smarttab
set autoindent

" don't add comment prefix when opening new lines
set formatoptions-=o

" searching
set hlsearch
set incsearch
set ignorecase
set smartcase

map <Leader>n :NERDTreeTabsToggle<CR>

" it's better than grep
set grepprg=ack

" yank to system clipboard
set clipboard=unnamed

" don't manage working directory
let g:ctrlp_working_path_mode = 0

" regex by default
let g:ctrlp_regexp = 1

" ctrlp ignores
let g:ctrlp_custom_ignore = {
  \ 'dir': 'build$\|\.git$\|\.storyboardc$\|\.svn$\|target$\|\.unpack$\|vendor$',
  \ 'file': 'ctags$\|\.ccignore$\|\.DS_Store$\|\.gitignore$\|\.repl_history$',
  \ 'link': '',
  \ }

" open multiple files in separate tabs
let g:ctrlp_open_multiple_files = 't'

" make tabs and trailing space obvious
set list listchars=tab:>-,trail:Â·
" highlight SpecialKey ctermbg=red guibg=red

" Vimux mappings
nmap <Leader>c :VimuxPromptCommand<CR>
nmap <Leader>r :VimuxRunLastCommand<CR>
nmap <Leader>R :call VimuxInterruptRunner() \| call VimuxRunLastCommand()<CR>
nmap <Leader>t :call VimuxRunCommand('rake spec files=' . bufname('%'))<CR>

" whitespace cleanup - largely "yanked" from:
" http://technotales.wordpress.com/2010/03/31/preserve-a-vim-function-that-keeps-your-state/
function! Preserve(command)
  " Preparation: save last search, and cursor position.
  let _s=@/
  let pos = getpos('.')
  execute a:command
  " Clean up: restore previous search history, and cursor position
  let @/=_s
  call setpos('.', pos)
endfunction

nmap <Leader>w :call Preserve('%s/\s\+$//e')<CR>

" tab cycling
map <C-L> :tabnext<CR>
map <C-H> :tabprevious<CR>

" make the current split the only one and turn diff off
nmap <Leader>do :only! \| :diffoff!<CR>

" snipmate
let g:snipMate = {}
let g:snipMate['snippet_dirs'] = ['~/.vim']
let g:snipMate.scope_aliases = {}
let g:snipMate.scope_aliases['ruby'] = 'ruby,motion'

